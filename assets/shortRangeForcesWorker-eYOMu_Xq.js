(function(){"use strict";self.onmessage=q=>{const{atoms:l,springConstant:I,rotationalConstant:v}=q.data,C=.1,c={},g=new Map(l.map(o=>[o.id,o])),b=new Set;for(const o of l){const h=c[o.id]||[0,0,0];for(const s of o.bonds){const e=g.get(s),p=[o.id,s].sort().join("-");if(b.has(p))continue;b.add(p);const r=1,i=[e.position[0]-o.position[0],e.position[1]-o.position[1],e.position[2]-o.position[2]],a=Math.max(Math.sqrt(i[0]**2+i[1]**2+i[2]**2),C),M=a-r,d=i.map(n=>n/a).map(n=>n*I*M);c[o.id]=h.map((n,m)=>n+d[m]),c[s]=(c[s]||[0,0,0]).map((n,m)=>n-d[m])}}for(const o of l){const h=c[o.id]||[0,0,0];for(let s=0;s<o.bonds.length;s++)for(let e=s+1;e<o.bonds.length;e++){const p=g.get(o.bonds[s]),r=g.get(o.bonds[e]),i=[p.position[0]-o.position[0],p.position[1]-o.position[1],p.position[2]-o.position[2]],a=[r.position[0]-o.position[0],r.position[1]-o.position[1],r.position[2]-o.position[2]],M=Math.sqrt(i[0]**2+i[1]**2+i[2]**2),u=Math.sqrt(a[0]**2+a[1]**2+a[2]**2),d=i.map(t=>t/M),n=a.map(t=>t/u),m=d.reduce((t,f,j)=>t+f*n[j],0),D=Math.acos(m),F=v*(Math.PI/2-D),P=d.map(t=>t*F),V=n.map(t=>t*F);c[o.id]=h.map((t,f)=>t+P[f]+V[f])}}postMessage(c)}})();
